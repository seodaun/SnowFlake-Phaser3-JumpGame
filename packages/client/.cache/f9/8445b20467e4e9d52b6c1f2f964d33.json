{"id":"node_modules/component-bind/index.js","dependencies":[{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\package.json","includedInParent":true,"mtime":1595678559880},{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\.babelrc","includedInParent":true,"mtime":1595516341597},{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\node_modules\\component-bind\\package.json","includedInParent":true,"mtime":1595676221756}],"generated":{"js":"/**\r\n * Slice reference.\r\n */\r\n\r\nvar slice = [].slice;\r\n\r\n/**\r\n * Bind `obj` to `fn`.\r\n *\r\n * @param {Object} obj\r\n * @param {Function|String} fn or string\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(obj, fn){\r\n  if ('string' == typeof fn) fn = obj[fn];\r\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\r\n  var args = slice.call(arguments, 2);\r\n  return function(){\r\n    return fn.apply(obj, args.concat(slice.call(arguments)));\r\n  }\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/component-bind/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/component-bind/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"node_modules/component-bind/index.js":"/**\r\n * Slice reference.\r\n */\r\n\r\nvar slice = [].slice;\r\n\r\n/**\r\n * Bind `obj` to `fn`.\r\n *\r\n * @param {Object} obj\r\n * @param {Function|String} fn or string\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(obj, fn){\r\n  if ('string' == typeof fn) fn = obj[fn];\r\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\r\n  var args = slice.call(arguments, 2);\r\n  return function(){\r\n    return fn.apply(obj, args.concat(slice.call(arguments)));\r\n  }\r\n};\r\n"},"lineCount":24}},"error":null,"hash":"3c4c7f733702a1eb07dcca7ddf0b126d","cacheData":{"env":{}}}