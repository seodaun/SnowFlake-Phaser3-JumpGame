{"id":"node_modules/core-js/modules/_to-primitive.js","dependencies":[{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\package.json","includedInParent":true,"mtime":1595678559880},{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\.babelrc","includedInParent":true,"mtime":1595516341597},{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1595676224014},{"name":"./_is-object","loc":{"line":2,"column":23},"parent":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\node_modules\\core-js\\modules\\_to-primitive.js","resolved":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\node_modules\\core-js\\modules\\_is-object.js"}],"generated":{"js":"// 7.1.1 ToPrimitive(input [, PreferredType])\r\nvar isObject = require('./_is-object');\r\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\r\n// and the second argument - flag - preferred type is a string\r\nmodule.exports = function (it, S) {\r\n  if (!isObject(it)) return it;\r\n  var fn, val;\r\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  throw TypeError(\"Can't convert object to primitive value\");\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/_to-primitive.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}}],"sources":{"node_modules/core-js/modules/_to-primitive.js":"// 7.1.1 ToPrimitive(input [, PreferredType])\r\nvar isObject = require('./_is-object');\r\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\r\n// and the second argument - flag - preferred type is a string\r\nmodule.exports = function (it, S) {\r\n  if (!isObject(it)) return it;\r\n  var fn, val;\r\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\r\n  throw TypeError(\"Can't convert object to primitive value\");\r\n};\r\n"},"lineCount":13}},"error":null,"hash":"8ee25c58d6364a603d30d1c887674139","cacheData":{"env":{}}}