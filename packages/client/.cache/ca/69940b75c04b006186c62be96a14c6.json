{"id":"node_modules/arraybuffer.slice/index.js","dependencies":[{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\package.json","includedInParent":true,"mtime":1595688552226},{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\.babelrc","includedInParent":true,"mtime":1595516341597},{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\node_modules\\arraybuffer.slice\\package.json","includedInParent":true,"mtime":1595676218279}],"generated":{"js":"/**\r\n * An abstraction for slicing an arraybuffer even when\r\n * ArrayBuffer.prototype.slice is not supported\r\n *\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(arraybuffer, start, end) {\r\n  var bytes = arraybuffer.byteLength;\r\n  start = start || 0;\r\n  end = end || bytes;\r\n\r\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\r\n\r\n  if (start < 0) { start += bytes; }\r\n  if (end < 0) { end += bytes; }\r\n  if (end > bytes) { end = bytes; }\r\n\r\n  if (start >= bytes || start >= end || bytes === 0) {\r\n    return new ArrayBuffer(0);\r\n  }\r\n\r\n  var abv = new Uint8Array(arraybuffer);\r\n  var result = new Uint8Array(end - start);\r\n  for (var i = start, ii = 0; i < end; i++, ii++) {\r\n    result[ii] = abv[i];\r\n  }\r\n  return result.buffer;\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/arraybuffer.slice/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"node_modules/arraybuffer.slice/index.js":"/**\r\n * An abstraction for slicing an arraybuffer even when\r\n * ArrayBuffer.prototype.slice is not supported\r\n *\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(arraybuffer, start, end) {\r\n  var bytes = arraybuffer.byteLength;\r\n  start = start || 0;\r\n  end = end || bytes;\r\n\r\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\r\n\r\n  if (start < 0) { start += bytes; }\r\n  if (end < 0) { end += bytes; }\r\n  if (end > bytes) { end = bytes; }\r\n\r\n  if (start >= bytes || start >= end || bytes === 0) {\r\n    return new ArrayBuffer(0);\r\n  }\r\n\r\n  var abv = new Uint8Array(arraybuffer);\r\n  var result = new Uint8Array(end - start);\r\n  for (var i = start, ii = 0; i < end; i++, ii++) {\r\n    result[ii] = abv[i];\r\n  }\r\n  return result.buffer;\r\n};\r\n"},"lineCount":30}},"error":null,"hash":"5c879fa51e1eca60e333dcde8454812e","cacheData":{"env":{}}}