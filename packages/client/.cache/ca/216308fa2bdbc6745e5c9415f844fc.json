{"id":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","dependencies":[{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\package.json","includedInParent":true,"mtime":1595518088560},{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\.babelrc","includedInParent":true,"mtime":1595516341597},{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\node_modules\\react-div-100vh\\package.json","includedInParent":true,"mtime":1595516430441}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.containsRvh = containsRvh;\nexports.default = void 0;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction containsRvh(propertyValue) {\n  // TODO: when regexp is lifted up the lexical scope, to be used\n  // in both `containsRvh` and `replaceRvhWithPx`, some tests start to\n  // fail. Seems like a regexp object contains some weird state that\n  // changes after executions; executions interfere with each other.\n  // It would be nice to figure out what is the problem exactly.\n  var rvhRegex = /(\\d+(\\.\\d*)?)rvh(?!\\w)/;\n  return rvhRegex.test(propertyValue);\n}\n\nfunction replaceRvhWithPx(propertyStringValue, windowHeight) {\n  // regexp is global to make #replace work multiple times\n  var rvhRegex = /(\\d+(\\.\\d*)?)rvh(?!\\w)/g;\n  return propertyStringValue.replace(rvhRegex, function (_, rvh) {\n    return \"\".concat(windowHeight * parseFloat(rvh) / 100, \"px\");\n  });\n}\n\nfunction throwOnBadArgs(givenStyle, windowHeight) {\n  if (_typeof(givenStyle) !== 'object' && givenStyle !== undefined || Array.isArray(givenStyle)) throw Error(\"style (the first argument) must be an object or undefined\");\n  if (typeof windowHeight !== 'number' || windowHeight < 0) throw Error('Second argument (windowHeight) must be a non-negative number');\n}\n\nfunction convertStyle(givenStyle, windowHeight) {\n  throwOnBadArgs(givenStyle, windowHeight); // If style is not passed, implicit {height: '100rvh'} style is used.\n\n  var defaultStyle = {\n    height: '100rvh'\n  };\n  var usedStyle = givenStyle === undefined ? defaultStyle : givenStyle;\n  var convertedStyle = {};\n  Object.keys(usedStyle).forEach(function (key) {\n    // if a value contains no rvh unit, it's used as is, otherwise converted\n    // to px; 1rvh = (window.innerHeight / 100)px\n    convertedStyle[key] = typeof usedStyle[key] === 'string' ? replaceRvhWithPx(usedStyle[key], windowHeight) : usedStyle[key];\n  });\n  return convertedStyle;\n}\n\nvar _default = convertStyle;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}}],"sources":{"node_modules/react-div-100vh/lib/convertStyle/convertStyle.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.containsRvh = containsRvh;\nexports.default = void 0;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction containsRvh(propertyValue) {\n  // TODO: when regexp is lifted up the lexical scope, to be used\n  // in both `containsRvh` and `replaceRvhWithPx`, some tests start to\n  // fail. Seems like a regexp object contains some weird state that\n  // changes after executions; executions interfere with each other.\n  // It would be nice to figure out what is the problem exactly.\n  var rvhRegex = /(\\d+(\\.\\d*)?)rvh(?!\\w)/;\n  return rvhRegex.test(propertyValue);\n}\n\nfunction replaceRvhWithPx(propertyStringValue, windowHeight) {\n  // regexp is global to make #replace work multiple times\n  var rvhRegex = /(\\d+(\\.\\d*)?)rvh(?!\\w)/g;\n  return propertyStringValue.replace(rvhRegex, function (_, rvh) {\n    return \"\".concat(windowHeight * parseFloat(rvh) / 100, \"px\");\n  });\n}\n\nfunction throwOnBadArgs(givenStyle, windowHeight) {\n  if (_typeof(givenStyle) !== 'object' && givenStyle !== undefined || Array.isArray(givenStyle)) throw Error(\"style (the first argument) must be an object or undefined\");\n  if (typeof windowHeight !== 'number' || windowHeight < 0) throw Error('Second argument (windowHeight) must be a non-negative number');\n}\n\nfunction convertStyle(givenStyle, windowHeight) {\n  throwOnBadArgs(givenStyle, windowHeight); // If style is not passed, implicit {height: '100rvh'} style is used.\n\n  var defaultStyle = {\n    height: '100rvh'\n  };\n  var usedStyle = givenStyle === undefined ? defaultStyle : givenStyle;\n  var convertedStyle = {};\n  Object.keys(usedStyle).forEach(function (key) {\n    // if a value contains no rvh unit, it's used as is, otherwise converted\n    // to px; 1rvh = (window.innerHeight / 100)px\n    convertedStyle[key] = typeof usedStyle[key] === 'string' ? replaceRvhWithPx(usedStyle[key], windowHeight) : usedStyle[key];\n  });\n  return convertedStyle;\n}\n\nvar _default = convertStyle;\nexports.default = _default;"},"lineCount":51}},"error":null,"hash":"e43facd021214dbc949e7be93bd856cd","cacheData":{"env":{}}}