{"id":"node_modules/engine.io-parser/lib/utf8.js","dependencies":[{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\package.json","includedInParent":true,"mtime":1595688552226},{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\.babelrc","includedInParent":true,"mtime":1595516341597},{"name":"C:\\Study_File\\진행중인 프로젝트\\SnowFlake\\packages\\client\\node_modules\\engine.io-parser\\package.json","includedInParent":true,"mtime":1595676226498}],"generated":{"js":"/*! https://mths.be/utf8js v2.1.2 by @mathias */\r\n\r\nvar stringFromCharCode = String.fromCharCode;\r\n\r\n// Taken from https://mths.be/punycode\r\nfunction ucs2decode(string) {\r\n\tvar output = [];\r\n\tvar counter = 0;\r\n\tvar length = string.length;\r\n\tvar value;\r\n\tvar extra;\r\n\twhile (counter < length) {\r\n\t\tvalue = string.charCodeAt(counter++);\r\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\r\n\t\t\t// high surrogate, and there is a next character\r\n\t\t\textra = string.charCodeAt(counter++);\r\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\r\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\r\n\t\t\t} else {\r\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\r\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\r\n\t\t\t\toutput.push(value);\r\n\t\t\t\tcounter--;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toutput.push(value);\r\n\t\t}\r\n\t}\r\n\treturn output;\r\n}\r\n\r\n// Taken from https://mths.be/punycode\r\nfunction ucs2encode(array) {\r\n\tvar length = array.length;\r\n\tvar index = -1;\r\n\tvar value;\r\n\tvar output = '';\r\n\twhile (++index < length) {\r\n\t\tvalue = array[index];\r\n\t\tif (value > 0xFFFF) {\r\n\t\t\tvalue -= 0x10000;\r\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\r\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\r\n\t\t}\r\n\t\toutput += stringFromCharCode(value);\r\n\t}\r\n\treturn output;\r\n}\r\n\r\nfunction checkScalarValue(codePoint, strict) {\r\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\r\n\t\tif (strict) {\r\n\t\t\tthrow Error(\r\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\r\n\t\t\t\t' is not a scalar value'\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n/*--------------------------------------------------------------------------*/\r\n\r\nfunction createByte(codePoint, shift) {\r\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\r\n}\r\n\r\nfunction encodeCodePoint(codePoint, strict) {\r\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\r\n\t\treturn stringFromCharCode(codePoint);\r\n\t}\r\n\tvar symbol = '';\r\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\r\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\r\n\t}\r\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\r\n\t\tif (!checkScalarValue(codePoint, strict)) {\r\n\t\t\tcodePoint = 0xFFFD;\r\n\t\t}\r\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\r\n\t\tsymbol += createByte(codePoint, 6);\r\n\t}\r\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\r\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\r\n\t\tsymbol += createByte(codePoint, 12);\r\n\t\tsymbol += createByte(codePoint, 6);\r\n\t}\r\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\r\n\treturn symbol;\r\n}\r\n\r\nfunction utf8encode(string, opts) {\r\n\topts = opts || {};\r\n\tvar strict = false !== opts.strict;\r\n\r\n\tvar codePoints = ucs2decode(string);\r\n\tvar length = codePoints.length;\r\n\tvar index = -1;\r\n\tvar codePoint;\r\n\tvar byteString = '';\r\n\twhile (++index < length) {\r\n\t\tcodePoint = codePoints[index];\r\n\t\tbyteString += encodeCodePoint(codePoint, strict);\r\n\t}\r\n\treturn byteString;\r\n}\r\n\r\n/*--------------------------------------------------------------------------*/\r\n\r\nfunction readContinuationByte() {\r\n\tif (byteIndex >= byteCount) {\r\n\t\tthrow Error('Invalid byte index');\r\n\t}\r\n\r\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\r\n\tbyteIndex++;\r\n\r\n\tif ((continuationByte & 0xC0) == 0x80) {\r\n\t\treturn continuationByte & 0x3F;\r\n\t}\r\n\r\n\t// If we end up here, it’s not a continuation byte\r\n\tthrow Error('Invalid continuation byte');\r\n}\r\n\r\nfunction decodeSymbol(strict) {\r\n\tvar byte1;\r\n\tvar byte2;\r\n\tvar byte3;\r\n\tvar byte4;\r\n\tvar codePoint;\r\n\r\n\tif (byteIndex > byteCount) {\r\n\t\tthrow Error('Invalid byte index');\r\n\t}\r\n\r\n\tif (byteIndex == byteCount) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Read first byte\r\n\tbyte1 = byteArray[byteIndex] & 0xFF;\r\n\tbyteIndex++;\r\n\r\n\t// 1-byte sequence (no continuation bytes)\r\n\tif ((byte1 & 0x80) == 0) {\r\n\t\treturn byte1;\r\n\t}\r\n\r\n\t// 2-byte sequence\r\n\tif ((byte1 & 0xE0) == 0xC0) {\r\n\t\tbyte2 = readContinuationByte();\r\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\r\n\t\tif (codePoint >= 0x80) {\r\n\t\t\treturn codePoint;\r\n\t\t} else {\r\n\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t}\r\n\t}\r\n\r\n\t// 3-byte sequence (may include unpaired surrogates)\r\n\tif ((byte1 & 0xF0) == 0xE0) {\r\n\t\tbyte2 = readContinuationByte();\r\n\t\tbyte3 = readContinuationByte();\r\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\r\n\t\tif (codePoint >= 0x0800) {\r\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\r\n\t\t} else {\r\n\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t}\r\n\t}\r\n\r\n\t// 4-byte sequence\r\n\tif ((byte1 & 0xF8) == 0xF0) {\r\n\t\tbyte2 = readContinuationByte();\r\n\t\tbyte3 = readContinuationByte();\r\n\t\tbyte4 = readContinuationByte();\r\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\r\n\t\t\t(byte3 << 0x06) | byte4;\r\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\r\n\t\t\treturn codePoint;\r\n\t\t}\r\n\t}\r\n\r\n\tthrow Error('Invalid UTF-8 detected');\r\n}\r\n\r\nvar byteArray;\r\nvar byteCount;\r\nvar byteIndex;\r\nfunction utf8decode(byteString, opts) {\r\n\topts = opts || {};\r\n\tvar strict = false !== opts.strict;\r\n\r\n\tbyteArray = ucs2decode(byteString);\r\n\tbyteCount = byteArray.length;\r\n\tbyteIndex = 0;\r\n\tvar codePoints = [];\r\n\tvar tmp;\r\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\r\n\t\tcodePoints.push(tmp);\r\n\t}\r\n\treturn ucs2encode(codePoints);\r\n}\r\n\r\nmodule.exports = {\r\n\tversion: '2.1.2',\r\n\tencode: utf8encode,\r\n\tdecode: utf8decode\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/engine.io-parser/lib/utf8.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}}],"sources":{"node_modules/engine.io-parser/lib/utf8.js":"/*! https://mths.be/utf8js v2.1.2 by @mathias */\r\n\r\nvar stringFromCharCode = String.fromCharCode;\r\n\r\n// Taken from https://mths.be/punycode\r\nfunction ucs2decode(string) {\r\n\tvar output = [];\r\n\tvar counter = 0;\r\n\tvar length = string.length;\r\n\tvar value;\r\n\tvar extra;\r\n\twhile (counter < length) {\r\n\t\tvalue = string.charCodeAt(counter++);\r\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\r\n\t\t\t// high surrogate, and there is a next character\r\n\t\t\textra = string.charCodeAt(counter++);\r\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\r\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\r\n\t\t\t} else {\r\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\r\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\r\n\t\t\t\toutput.push(value);\r\n\t\t\t\tcounter--;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toutput.push(value);\r\n\t\t}\r\n\t}\r\n\treturn output;\r\n}\r\n\r\n// Taken from https://mths.be/punycode\r\nfunction ucs2encode(array) {\r\n\tvar length = array.length;\r\n\tvar index = -1;\r\n\tvar value;\r\n\tvar output = '';\r\n\twhile (++index < length) {\r\n\t\tvalue = array[index];\r\n\t\tif (value > 0xFFFF) {\r\n\t\t\tvalue -= 0x10000;\r\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\r\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\r\n\t\t}\r\n\t\toutput += stringFromCharCode(value);\r\n\t}\r\n\treturn output;\r\n}\r\n\r\nfunction checkScalarValue(codePoint, strict) {\r\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\r\n\t\tif (strict) {\r\n\t\t\tthrow Error(\r\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\r\n\t\t\t\t' is not a scalar value'\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n/*--------------------------------------------------------------------------*/\r\n\r\nfunction createByte(codePoint, shift) {\r\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\r\n}\r\n\r\nfunction encodeCodePoint(codePoint, strict) {\r\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\r\n\t\treturn stringFromCharCode(codePoint);\r\n\t}\r\n\tvar symbol = '';\r\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\r\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\r\n\t}\r\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\r\n\t\tif (!checkScalarValue(codePoint, strict)) {\r\n\t\t\tcodePoint = 0xFFFD;\r\n\t\t}\r\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\r\n\t\tsymbol += createByte(codePoint, 6);\r\n\t}\r\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\r\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\r\n\t\tsymbol += createByte(codePoint, 12);\r\n\t\tsymbol += createByte(codePoint, 6);\r\n\t}\r\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\r\n\treturn symbol;\r\n}\r\n\r\nfunction utf8encode(string, opts) {\r\n\topts = opts || {};\r\n\tvar strict = false !== opts.strict;\r\n\r\n\tvar codePoints = ucs2decode(string);\r\n\tvar length = codePoints.length;\r\n\tvar index = -1;\r\n\tvar codePoint;\r\n\tvar byteString = '';\r\n\twhile (++index < length) {\r\n\t\tcodePoint = codePoints[index];\r\n\t\tbyteString += encodeCodePoint(codePoint, strict);\r\n\t}\r\n\treturn byteString;\r\n}\r\n\r\n/*--------------------------------------------------------------------------*/\r\n\r\nfunction readContinuationByte() {\r\n\tif (byteIndex >= byteCount) {\r\n\t\tthrow Error('Invalid byte index');\r\n\t}\r\n\r\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\r\n\tbyteIndex++;\r\n\r\n\tif ((continuationByte & 0xC0) == 0x80) {\r\n\t\treturn continuationByte & 0x3F;\r\n\t}\r\n\r\n\t// If we end up here, it’s not a continuation byte\r\n\tthrow Error('Invalid continuation byte');\r\n}\r\n\r\nfunction decodeSymbol(strict) {\r\n\tvar byte1;\r\n\tvar byte2;\r\n\tvar byte3;\r\n\tvar byte4;\r\n\tvar codePoint;\r\n\r\n\tif (byteIndex > byteCount) {\r\n\t\tthrow Error('Invalid byte index');\r\n\t}\r\n\r\n\tif (byteIndex == byteCount) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Read first byte\r\n\tbyte1 = byteArray[byteIndex] & 0xFF;\r\n\tbyteIndex++;\r\n\r\n\t// 1-byte sequence (no continuation bytes)\r\n\tif ((byte1 & 0x80) == 0) {\r\n\t\treturn byte1;\r\n\t}\r\n\r\n\t// 2-byte sequence\r\n\tif ((byte1 & 0xE0) == 0xC0) {\r\n\t\tbyte2 = readContinuationByte();\r\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\r\n\t\tif (codePoint >= 0x80) {\r\n\t\t\treturn codePoint;\r\n\t\t} else {\r\n\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t}\r\n\t}\r\n\r\n\t// 3-byte sequence (may include unpaired surrogates)\r\n\tif ((byte1 & 0xF0) == 0xE0) {\r\n\t\tbyte2 = readContinuationByte();\r\n\t\tbyte3 = readContinuationByte();\r\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\r\n\t\tif (codePoint >= 0x0800) {\r\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\r\n\t\t} else {\r\n\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t}\r\n\t}\r\n\r\n\t// 4-byte sequence\r\n\tif ((byte1 & 0xF8) == 0xF0) {\r\n\t\tbyte2 = readContinuationByte();\r\n\t\tbyte3 = readContinuationByte();\r\n\t\tbyte4 = readContinuationByte();\r\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\r\n\t\t\t(byte3 << 0x06) | byte4;\r\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\r\n\t\t\treturn codePoint;\r\n\t\t}\r\n\t}\r\n\r\n\tthrow Error('Invalid UTF-8 detected');\r\n}\r\n\r\nvar byteArray;\r\nvar byteCount;\r\nvar byteIndex;\r\nfunction utf8decode(byteString, opts) {\r\n\topts = opts || {};\r\n\tvar strict = false !== opts.strict;\r\n\r\n\tbyteArray = ucs2decode(byteString);\r\n\tbyteCount = byteArray.length;\r\n\tbyteIndex = 0;\r\n\tvar codePoints = [];\r\n\tvar tmp;\r\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\r\n\t\tcodePoints.push(tmp);\r\n\t}\r\n\treturn ucs2encode(codePoints);\r\n}\r\n\r\nmodule.exports = {\r\n\tversion: '2.1.2',\r\n\tencode: utf8encode,\r\n\tdecode: utf8decode\r\n};\r\n"},"lineCount":211}},"error":null,"hash":"0396a20a20c04f92be02efa33fd87ad4","cacheData":{"env":{}}}